apiVersion: v1
kind: ConfigMap
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  namespace: kyma-system
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
data:
  akspatch.sh: |
    #!/usr/bin/env sh
    set -e

    if [[ "$(kubectl get nodes -l kubernetes.azure.com/role=agent)" ]]; then
      echo "AKS Cluster found, applying patch..."
      kubectl delete servicemonitors.monitoring.coreos.com monitoring-kubelet -n kyma-system --ignore-not-found
      kubectl apply -f /scripts/patch.yaml
    else
        echo "No AKS Cluster found, skipping..."
    fi
  patch.yaml: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      labels:
        app: {{ template "prometheus-operator.name" . }}-kubelet
        {{- include "prometheus-operator.labels" . | indent 8 }}
      name: {{ template "prometheus-operator.fullname" . }}-kubelet
      namespace: {{ $.Release.Namespace }}
    spec:
      endpoints:
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          honorLabels: true
          port: https-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecureSkipVerify: true
          metricRelabelings:
          - sourceLabels: [ __name__ ]
            regex: ^(apiserver_client_certificate_expiration_seconds_bucket|go_goroutines|go_memstats_alloc_bytes|go_memstats_heap_alloc_bytes|go_memstats_heap_inuse_bytes|go_memstats_heap_sys_bytes|go_memstats_stack_inuse_bytes|kubelet_cgroup_manager_duration_seconds_bucket|kubelet_cgroup_manager_duration_seconds_count|kubelet_node_name|kubelet_pleg_relist_duration_seconds_bucket|kubelet_pleg_relist_duration_seconds_count|kubelet_pleg_relist_interval_seconds_bucket|kubelet_pod_start_duration_seconds_count|kubelet_pod_worker_duration_seconds_bucket|kubelet_pod_worker_duration_seconds_count|kubelet_running_container_count|kubelet_running_pod_count|kubelet_runtime_operations|kubelet_runtime_operations_total|kubelet_runtime_operations_errors_total|kubelet_volume_stats_available_bytes|kubelet_volume_stats_capacity_bytes|kubelet_volume_stats_inodes|kubernetes_build_info|process_cpu_seconds_total|process_max_fds|process_open_fds|process_resident_memory_bytes|process_start_time_seconds|process_virtual_memory_bytes|rest_client_request_latency_seconds_bucket|rest_client_requests_total|storage_operation_duration_seconds_bucket|storage_operation_duration_seconds_count|storage_operation_errors_total|volume_manager_total_volumes)$
            action: keep
        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
          honorLabels: true
          path: /metrics/cadvisor
          port: https-metrics
          scheme: https
          tlsConfig:
            caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecureSkipVerify: true
          metricRelabelings:
          - sourceLabels: [ __name__ ]
            regex: ^(container_cpu_cfs_periods_total|container_cpu_cfs_throttled_periods_total|container_cpu_cfs_throttled_seconds_total|container_cpu_usage_seconds_total|container_fs_reads_bytes_total|container_fs_usage_bytes|container_fs_writes_bytes_total|container_memory_cache|container_memory_failcnt|container_memory_rss|container_memory_swap|container_memory_usage_bytes|container_memory_working_set_bytes|container_network_receive_bytes_total|container_network_receive_packets_dropped_total|container_network_receive_packets_total|container_network_transmit_bytes_total|container_network_transmit_packets_dropped_total|container_network_transmit_packets_total)$
            action: keep
      jobLabel: k8s-app
      namespaceSelector:
        matchNames:
          - kube-system
      selector:
        matchLabels:
          k8s-app: kubelet

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
rules:
  - apiGroups: [""]
    resources: ["serviceaccounts", "services", "pods", "nodes"]
    verbs: ["get", "delete", "create", "watch", "list"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "delete", "create", "watch", "list"]
  - apiGroups: ["extensions","apps"]
    resources: ["deployments", "statefulsets"]
    verbs: ["get", "delete", "create", "watch", "list"]
  - apiGroups: ["monitoring.coreos.com"]
    resources: ["alertmanagers", "prometheuses", "prometheuses/finalizers", "alertmanagers/finalizers", "servicemonitors", "podmonitors", "prometheusrules", "podmonitors"]
    verbs: ["get", "delete", "create", "watch", "list"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "delete", "create", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: "0"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aks-kubelet-monitoring-kyma-patch
subjects:
  - kind: ServiceAccount
    name: aks-kubelet-monitoring-kyma-patch
    namespace: kyma-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: aks-kubelet-monitoring-kyma-patch
  namespace: kyma-system
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
    sidecar.istio.io/inject: "false"
    helm.sh/hook-weight: "9"
spec:
  backoffLimit: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      name: aks-kubelet-monitoring-kyma-patch
      labels:
        app: aks-kubelet-monitoring-kyma-patch
    spec:
      serviceAccountName: aks-kubelet-monitoring-kyma-patch
      restartPolicy: Never
      containers:
        - name: aks-kubelet-monitoring-kyma-patch
          image: eu.gcr.io/kyma-project/test-infra/alpine-kubectl:v20200617-32c1f3ff
          command: ["/scripts/akspatch.sh"]
          volumeMounts:
            - name: aks-kubelet-monitoring-kyma-patch
              mountPath: /scripts
          terminationMessagePolicy: "FallbackToLogsOnError"
          resources:
            requests:
              cpu: 200m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 128Mi
      volumes:
        - name: aks-kubelet-monitoring-kyma-patch
          configMap:
            name: aks-kubelet-monitoring-kyma-patch
            defaultMode: 0744

